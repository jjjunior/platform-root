name: Deploy to AWS CodeArtifact

on:
  push:
    branches: [ "master" ]
  # workflow_dispatch: {}

permissions:
  id-token: write
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 25 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '25'

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: (Diag) Who am I?
        run: aws sts get-caller-identity

      # Obtem token e escreve settings.xml (sem usar `aws codeartifact login`)
      - name: Get CodeArtifact token
        id: ca
        run: |
          TOKEN=$(aws codeartifact get-authorization-token \
            --domain luministack \
            --domain-owner 148206343556 \
            --query authorizationToken --output text)
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Configure Maven settings.xml for CodeArtifact (server id = codeartifact)
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<'XML'
          <settings>
            <servers>
              <server>
                <id>luministack-repository</id>
                <username>aws</username>
                <password>${env.CODEARTIFACT_AUTH_TOKEN}</password>
              </server>
            </servers>
          </settings>
          XML
          echo "CODEARTIFACT_AUTH_TOKEN=${{ steps.ca.outputs.token }}" >> $GITHUB_ENV

      # Bump de versão ANTES do build para que install+deploy usem a nova versão
      - name: Increment patch version
        id: bump
        shell: bash
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
          mvn -B versions:set -DnewVersion="$NEW_VERSION" -DgenerateBackupPoms=false
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumped: $CURRENT_VERSION -> $NEW_VERSION"

      - name: Commit new version (pom.xml) to master
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "ci: bump version to ${{ steps.bump.outputs.new_version }}" || echo "No changes to commit"
          git push origin master || echo "Nothing to push"

      - name: Build (clean + install)
        run: mvn -B clean install -DskipTests

      # Com distributionManagement configurado, basta `mvn deploy`
      - name: Deploy to CodeArtifact
        run: mvn -B -U -DskipTests deploy